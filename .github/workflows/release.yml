on:
  workflow_run:
    workflows: [ci]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (format: vX.Y.Z)"
        required: true
      upload:
        description: "Upload final artifacts to github"
        default: false
  workflow_call:
    inputs:
      version:
        required: true
        type: string
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-release
  cancel-in-progress: false

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      publish: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.upload == 'true' || github.event_name == 'push' }}
    steps:
      - name: Exract the Version
        id: extract_version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            IN_VERSION=${{ inputs.version }}
            # Remove the leading 'v' from the tag
            GIT_VERSION=${GITHUB_REF#refs/tags/v}
            VERSION=${IN_VERSION:-$GIT_VERSION}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION=${{ github.event.inputs.version }}
            VERSION=${VERSION#v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "Error: Unsupported event type."
            exit 1
          fi

  binary:
    name: Binaries
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      CONNET_VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Build release
        run: nix develop --command make release
      - name: Upload release
        uses: softprops/action-gh-release@v2
        if: ${{ needs.setup.outputs.publish }}
        with:
          tag_name: v${{ env.CONNET_VERSION }}
          files: |
            dist/archive/connet-${{ env.CONNET_VERSION }}-*.tar.gz
            dist/archive/connet-${{ env.CONNET_VERSION }}-*.zip

  docker-x86:
    name: Docker x86
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      CONNET_VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Docker build
        run: nix build .#docker
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker push
        if: ${{ needs.setup.outputs.publish }}
        run: nix develop --command skopeo copy "docker-archive:result" "docker://ghcr.io/connet-dev/connet:${CONNET_VERSION}-amd64"

  docker-arm:
    name: Docker arm
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      CONNET_VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: system = aarch64-linux
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Docker build
        run: nix build .#docker
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker push
        if: ${{ needs.setup.outputs.publish }}
        run: nix develop --command skopeo copy "docker-archive:result" "docker://ghcr.io/connet-dev/connet:${CONNET_VERSION}-arm64"

  docker-multiarch:
    name: Tag multi-arch
    runs-on: ubuntu-latest
    needs: [setup, docker-x86, docker-arm]
    env:
      CONNET_VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker tag
        if: ${{ needs.setup.outputs.publish }}
        run: nix develop --command manifest-tool push from-args --platforms linux/amd64,linux/arm64 --template ghcr.io/connet-dev/connet:${CONNET_VERSION}-ARCHVARIANT --target ghcr.io/connet-dev/connet:${CONNET_VERSION}
